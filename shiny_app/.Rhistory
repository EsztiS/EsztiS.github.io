end = ncol(df)
2:end-1
2:(end-1)
col=3
colnms = names(df)
df$idx = as.numeric(rownames(df[ ,(col-1):col]))
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
col=2
colnms = names(df)
df$idx = as.numeric(rownames(df[ ,(col-1):col]))
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
col=3
colnms = names(df)
df$idx = as.numeric(rownames(df[ ,(col-1):col]))
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
col=2
colnms = names(df)
colnms
df$idx = as.numeric(rownames(df[ ,(col-1):col]))
df
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
rownames(df)
as.numeric(rownames(df))
col=3
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
gbx1
e1 = summarise(gbx1, id = min(idx))
e1
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df
e1
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
col=3
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
col=3
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
gbx1
e1 = summarise(gbx1, id = min(idx))
e1
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
col=3
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
newDF = df[ ,1]
newDF
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = df[ ,1]
newDF
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
newDF[ ,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
data.frame(newDF, nrow = length(df), ncol = end)
?data.frame
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = df[ ,1]
newDF
newDF[,2]
?rep
newDF[,2] = rep(1,9)
newDF[,2] = rep('1',9)
data.frame(newDF, nrow = length(df), ncol = end)
newDf = data.frame(newDF, nrow = length(df), ncol = end)
newDF[,2] = rep(1,9)
newDF
tmp = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = df[ ,1]
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df
apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
tmp = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
tmp
newDF[ ,2] = tmp
newDF[ ,2] = t(tmp)
newDF[ ,2] = as.data.frame(tmp)
class(newDF)
newDF = data.frame(df[ ,1])
newDF
newDF = data.frame( colnams[1] = df[ ,1])
data.frame
?data.frame
newDF = data.frame(df[ ,1], names=colnms[1])
newDF
newDF = data.frame(df[ ,1], names()=colnms[1])
newDF = data.frame(df[ ,1])
colnms[1]
newDF
View(newDF)
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
View(testm)
View(testm)
rm(testm)
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
newDF = data.frame(df[ ,1])
newDF
names(newDF)
names(newDF) = colnms[1]
names(newDF)
newDF[,2] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
col=3
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
df = merge(df, dic, on = df[ ,col-1])
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = data.frame(df[ ,1])
names(newDF) = colnms[1]
col=2
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,col-1])
newDF[,col] = apply(df[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
col=3
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,col-1])
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = data.frame(df[ ,1])
names(newDF) = colnms[1]
for (col in 2:(end) {
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,col-1])
#df = merge(df, dic, on = df[ ,col-1])
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
}
for (col in 2:(end)) {
gbx1 = do.call(group_by, list(df, as.name(colnms[col-1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,col-1])
#df = merge(df, dic, on = df[ ,col-1])
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
}
newDF
df
test = list(c('A','A','A','B','B','C','D','D','D'),
c('z','y','z','z','y','x','w','y','z'),
c('m','n','l','m','n','l','m','n','l'))
testm = matrix(unlist(test), nrow = 9, ncol = 3)
df = data.frame(testm)
df
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = data.frame(df[ ,1])
names(newDF) = colnms[1]
gbx1 = do.call(group_by, list(df, as.name(colnms[1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,1])
for (col in 2:(end)) {
#df = merge(df, dic, on = df[ ,col-1])
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
}
newDF
getwd()
setwd('~/Documents/__NYC_DSA/Dev/EsztiS.github.io/shiny_app')
r_raw <- read.csv('data/receipts.csv', colClasses='character')
r_nums <- as.data.frame(sapply(r_raw[13:72], FUN = function(x) as.numeric(gsub(",", "", x))))
receipts <- cbind(r_raw[1:12], r_nums)
df = receipts
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = data.frame(df[ ,1])
names(newDF) = colnms[1]
gbx1 = do.call(group_by, list(df, as.name(colnms[1])))
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,1])
for (col in 2:(end)) {
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
}
head(newDF[ ,1:2])
names(newDF)
newDF$V2
newDF[6:7,1:10]
newDF[6:7,]
newDF[6:7,1]
newDF[6:7,2]
newDF[6:7,3]
newDF[6:7,4]
newDF[6:7,5]
newDF[6:7,7]
newDF[6:7,8]
newDF[6:7,9]
newDF[6:7,10]
newDF[6,10]
newDF[7,10]
newDF[7,8]
newDF[7,5]
newDF[7,4]
newDF[6,4]
names(receipts)
r_years = grep('^X[1-2][0-9][0-9][0-9]',names(receipts))
r_indices = grep('.name$|.Budget$',names(receipts))
df = receipts[r_indices]
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = data.frame(df[ ,1])
names(newDF) = colnms[1]
gbx1 = do.call(group_by, list(df, as.name(colnms[1])))
col = 2
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,1])
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
receipts$Source.subcategory.name = newDF$V2
names(receipts)
receipts$Source.subcategory.name
getwd()
setwd('../')
names(receipts)
library(googleVis)
accounts <- select(receipts, Source.category.name, Source.subcategory.name,
Agency.name, Bureau.name, Account.name, X1962)
o_raw <- read.csv('data/outlays.csv', colClasses='character')
o_nums <- as.data.frame(sapply(o_raw[13:72], FUN = function(x) as.numeric(gsub(",", "", x))))
outlays <- cbind(o_raw[1:12], o_nums)
o_years = grep('^X[1-2][0-9][0-9][0-9]',names(outlays))
o_indices = grep('.Name$|.Budget$|.split$|ory$',names(outlays))
setwd('shiny_app/')
o_raw <- read.csv('data/outlays.csv', colClasses='character')
o_nums <- as.data.frame(sapply(o_raw[13:72], FUN = function(x) as.numeric(gsub(",", "", x))))
outlays <- cbind(o_raw[1:12], o_nums)
o_years = grep('^X[1-2][0-9][0-9][0-9]',names(outlays))
o_indices = grep('.Name$|.Budget$|.split$|ory$',names(outlays))
df = outlays[o_indices]
end = ncol(df)
colnms = names(df)
df$idx = as.numeric(rownames(df))
newDF = data.frame(df[ ,1])
names(newDF) = colnms[1]
gbx1 = do.call(group_by, list(df, as.name(colnms[1])))
col = 2
e1 = summarise(gbx1, id = min(idx))
dic = ungroup(e1)
gbx1 = merge(gbx1, dic, on = gbx1[ ,1])
newDF[,col] = apply(gbx1[, c(colnms[col],'id')], 1, paste, collapse = '')
newDF
head(newDF)
names(outlays)
outlays[o_indices]
names(outlays[o_indices])
outlays$Bureau.Name = newDF$V2
outlays2 <- outlays[outlays$X1962 > 0,]
accounts <- select(outlays2, BEA.Category, Agency.Name, Bureau.Name, Account.Name, X1962)
bea <- aggregate(list(bea.value=accounts$X1962),
list(bea=accounts$BEA.Category),sum)
agency <- aggregate(list(agency.value=accounts$X1962),
list(agency=accounts$Agency.Name,
bea=accounts$BEA.Category),sum)
bureau <- aggregate(list(bureau.value=accounts$X1962),
list(bureau=accounts$Bureau.Name,
agency=accounts$Agency.Name,
bea=accounts$BEA.Category),sum)
account <- aggregate(list(account.value=accounts$X1962),
list(account=accounts$Account.Name,
bureau=accounts$Bureau.Name,
agency=accounts$Agency.Name,
bea=accounts$BEA.Category),sum)
the.money <- data.frame(categoryid=c('TotalBudget',
as.character(bea$bea),
as.character(agency$agency)),
#as.character(bureau$bureau)),
#as.character(account$account)),
parentid=c(NA,
rep('TotalBudget',length(unique(accounts$BEA.Category))),
as.character(agency$bea)),
#as.character(bureau$bea)),
#as.character(account$bureau)),
values=c(sum(accounts$X1962),
bea$bea.value,
agency$agency.value))
#bureau$bureau.value))
#account$account.value))
#the.money2=the.money[!duplicated(the.money$category),]
the.money$colors=the.money$values+1
moneyTree <- gvisTreeMap(the.money, "categoryid", "parentid",
"values",'colors')
#, options=list(showScale=TRUE,width=1200, height=1000, fontSize=20))
plot(moneyTree)
the.money <- data.frame(categoryid=c('TotalBudget',
#as.character(bea$bea),
as.character(agency$agency),
as.character(bureau$bureau)),
#as.character(account$account)),
parentid=c(NA,
rep('TotalBudget',length(unique(accounts$Agency.name))),
#as.character(agency$bea)),
as.character(bureau$agency)),
#as.character(account$bureau)),
values=c(sum(accounts$X1962),
#bea$bea.value,
agency$agency.value,
bureau$bureau.value))
length(unique(accounts$Agency.name)
)
the.money <- data.frame(categoryid=c('TotalBudget',
#as.character(bea$bea),
as.character(agency$agency),
as.character(bureau$bureau)),
#as.character(account$account)),
parentid=c(NA,
rep('TotalBudget',length(unique(accounts$Agency.Name))),
#as.character(agency$bea)),
as.character(bureau$agency)),
#as.character(account$bureau)),
values=c(sum(accounts$X1962),
#bea$bea.value,
agency$agency.value,
bureau$bureau.value))
length(unique(accounts$Agency.Name))
length(bureau$agency)
length(agency$agency)
length(bureau$bureau)
216+92
r_raw <- read.csv('data/receipts.csv', colClasses='character')
r_nums <- as.data.frame(sapply(r_raw[13:72], FUN = function(x) as.numeric(gsub(",", "", x))))
receipts <- cbind(r_raw[1:12], r_nums)
r_years = grep('^X[1-2][0-9][0-9][0-9]',names(receipts))
r_indices = grep('.name$|.Budget$',names(receipts))
colnames(receipts)
colnames(receipts[1:12])
o_raw <- read.csv('data/outlays.csv', colClasses='character')
o_nums <- as.data.frame(sapply(o_raw[13:72], FUN = function(x) as.numeric(gsub(",", "", x))))
outlays <- cbind(o_raw[1:12], o_nums)
o_years = grep('^X[1-2][0-9][0-9][0-9]',names(outlays))
o_indices = grep('.Name$|.Budget$|.split$|ory$',names(outlays))
colnames(outlays[1:12])
colnames(outlays[o_indices])
